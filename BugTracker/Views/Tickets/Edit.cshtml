@model BugTracker.Models.Tickets

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css" />

<style>
    footer{
        display: none;
    }
</style>

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-lg-5 ">
        <ul class="breadcrumb">
            <li><i class="fa fa-home"></i><a href="@Url.Action("Index", "Tickets")">Tickets</a></li>
            <li>Edit</li>
        </ul>
    </div>
</div>
<!-- main -->
<div class="content">
    <div class="main-header">
        <br />
        <div class="row">
            <div class="col-md-8">
                <h2>Ticket Edit</h2>
                <em>@Html.DisplayFor(model => model.Title)</em>
            </div>
        </div>
    </div><br />
    <div class="main-content">
        <div class="project-section general-info">
            <div class="row">
                @using (Html.BeginForm("Edit", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.OwnerUserId)
                        @Html.HiddenFor(model => model.Created)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-1" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-1" })
                            <div class="col-md-4">
                                @Html.TextAreaFor(model => model.Description, new { rows = 8, cols = 52, htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div><br />
                        @*<div class="form-group">
                    @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-1" })
                            <div class="col-md-4">
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div><br />
                        <!--Limit "Developer" edit ability, else "Admin" or "PM"-->
                        @if (User.IsInRole("Developer"))
                        {
                            @Html.HiddenFor(model => model.ProjectId)
                            @Html.HiddenFor(model => model.TicketPriorityId)
                            @Html.HiddenFor(model => model.TicketStatusId)
                            @Html.HiddenFor(model => model.AssignedToUserId)
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-1" })
                                <div class="col-md-4">
                                    @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                                </div>
                            </div><br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-1" })
                                <div class="col-md-4">
                                    @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                                </div>
                            </div><br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketStatusId, "Status", htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-1" })
                                <div class="col-md-4">
                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                                </div>
                            </div><br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedToUserId, "Assigned", htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-1" })
                                <div class="col-md-4">
                                    @Html.DropDownList("AssignedToUserId", null, "Unassigned", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                                </div>
                            </div><br />
                        }
                        <!-- HIDDEN DATA - PASSED BACK TO SERVER -->
                        @*<div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.OwnerUserId, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>*@
                        @*<div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>*@
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" id="ticketEditBtn"/>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>





























@*@using (Html.BeginForm())*@

@*@using (Html.BeginForm("Edit", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tickets</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.OwnerUserId)
        @Html.HiddenFor(model => model.Created)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { rows = 5, cols = 50, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Developer"))
        {
            @Html.HiddenFor(model => model.ProjectId)
            @Html.HiddenFor(model => model.TicketPriorityId)
            @Html.HiddenFor(model => model.TicketStatusId)
            @Html.HiddenFor(model => model.AssignedToUserId)
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
            </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AssignedToUserId", null, "Unassigned", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                    </div>
                </div>
        }   

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
